{"version":3,"sources":["components/08-useReducer/todoReducer.js","components/08-useReducer/Hijos/TodoListItem.js","components/08-useReducer/Hijos/TodoList.js","components/08-useReducer/Hijos/TodoAdd.js","hooks/useForm.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desc","TodoList","todos","i","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6709651.chunk.js","sourcesContent":["\r\n\r\n\r\nexport const todoReducer = (state = [], action) => {\r\n\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload);\r\n        case 'toggle':\r\n            return state.map(todo => \r\n                (todo.id === action.payload)\r\n                ? { ...todo, done: !todo.done }\r\n                : todo\r\n                );\r\n        case 'toggle-od':\r\n            return state.map(todo => {\r\n                if (todo.id === action.payload) {\r\n                    return {\r\n                        ...todo,\r\n                        done: !todo.done\r\n                    }\r\n                } else {\r\n                    return todo;\r\n                }\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react'\r\n\r\nexport const TodoListItem = ({todo, index, handleDelete, handleToggle}) => {\r\n    return (\r\n        <li\r\n            key={todo.id}\r\n            className=\"list-group-item\"\r\n        >\r\n            <p className={`${todo.done && 'complete'}`}\r\n                onClick={() => handleToggle(todo.id)}\r\n            >\r\n                {index + 1}. {todo.desc}\r\n            </p>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => handleDelete(todo.id)}\r\n            >\r\n                Borrar\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { TodoListItem } from './TodoListItem';\r\n\r\n\r\n\r\n\r\nexport const TodoList= ({ todos, handleDelete, handleToggle }) => {\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n            {\r\n                todos.map((todo, i) => (\r\n                    <TodoListItem\r\n                        key={todo.id}\r\n                        todo={todo} index={i}\r\n                        handleDelete={handleDelete}\r\n                        handleToggle={handleToggle}\r\n                    />\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\n","\r\n\r\nimport React from 'react'\r\nimport { useForm } from '../../../hooks/useForm';\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n\r\n    const [{ description }, handleInputChange, reset] = useForm({\r\n        description: ''\r\n    });\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (description.trim().length < 1) {\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        };\r\n\r\n        handleAddTodo(newTodo);\r\n        reset();\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>Agregar ToDo</h4>\r\n            <hr />\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Aprender...\"\r\n                    autoComplete=\"off\"\r\n                    value={description}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <button\r\n                    className=\"btn btn-outline-primary mt-1 btn-block\"\r\n                    type=\"submit\"\r\n                >\r\n                    Agregar\r\n                        </button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { todoReducer } from './todoReducer';\r\nimport { TodoList } from './Hijos/TodoList';\r\nimport { TodoAdd } from './Hijos/TodoAdd';\r\n\r\nimport './styles.css';\r\n\r\n\r\nconst init = () => {\r\n\r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n}\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos])\r\n\r\n    const handleDelete = (todoId) => {\r\n        \r\n        if(!todoId){\r\n            return;\r\n        }\r\n\r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        }\r\n\r\n        dispatch(action);\r\n\r\n    }\r\n\r\n    const handleToggle = (todoId) => {\r\n\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId\r\n        });\r\n\r\n    }\r\n\r\n    const handleAddTodo = (newTodo) => {\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Todo App ({todos.length})</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                    <TodoList\r\n                        todos={todos}\r\n                        handleDelete = {handleDelete}\r\n                        handleToggle = {handleToggle}\r\n                    />\r\n                </div>\r\n                <div className=\"col-5\">\r\n\r\n                    <TodoAdd\r\n                        handleAddTodo={handleAddTodo}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}